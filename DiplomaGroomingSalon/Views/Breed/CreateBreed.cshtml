@model DiplomaGroomingSalon.Domain.ViewModels.BreedViewModel

@{
    ViewData["Title"] = "Create Breed";
}

<h1>Create Breed</h1>

<h4>Create a breed for a client</h4>
<p>
	<a asp-controller="PetType" asp-action="CreatePetType">Create New Pet Type</a>
</p>
<p>
	<a asp-action="CreateBreed">Create New Breed</a>
</p>
<p>
	<a asp-controller="ServiceType" asp-action="CreateServiceType">Create New Service Type</a>
</p>
@if (ViewBag.TypePet == null)
{
	<div class="col-md-8">
		<div class="card-body">
			<h5 class="card-title text-center">Complete the Pet Type List</h5>
		</div>
	</div>
}
else
{
	<hr/>
	<div class="row">
		<div class="col-md-4">
			<form asp-action="CreateBreed">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<div class="form-group">
					<label>Pet Type</label>
					@Html.DropDownListFor(m => m.PetTypeId, ViewBag.TypePet as IEnumerable<SelectListItem>, "--Select Pet Type--", new {@class = "form-control"})
				</div>
				<div class="form-group">
					<label asp-for="BreedName" class="control-label"></label>
					<input asp-for="BreedName" class="form-control"/>
					<span asp-validation-for="BreedName" class="text-danger"></span>
				</div>

				<div class="form-group">
					<input type="submit" value="Create" class="btn btn-primary"/>
				</div>
			</form>
		</div>
	</div>
	<div>

		<a asp-action="GetBreeds">Back to List Breeds</a>
	</div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
