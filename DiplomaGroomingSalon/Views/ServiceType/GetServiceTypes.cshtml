@using NonFactors.Mvc.Grid
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<DiplomaGroomingSalon.Domain.Entities.ServiceType>

@{
	ViewData["Title"] = "Get Service Types";
}

<h1>List Service Types</h1>

<p>
	<a asp-controller="PetType" asp-action="CreatePetType">Create New Pet Type</a>
</p>
<p>
	<a asp-controller="Breed" asp-action="CreateBreed">Create New Breed</a>
</p>
<p>
	<a asp-action="CreateServiceType">Create New Service Type</a>
</p>
<head>
	<meta name="viewport" content="width=device-width"/>
	<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet"/>
</head>
@if (Model == null)
{
	<div class="col-md-8">
		<div class="card-body">
			<h5 class="card-title text-center">The list is empty :(</h5>
		</div>
	</div>
}
else
{
	<div class="row">
		<div class="col-12">
			@Html.Grid(Model).Build(columns =>
			{
				columns.Add(model => model.Breed.PetType.PetTypeName).Titled("Pet Type").Filterable(true).Sortable(true);
				columns.Add(model => model.Breed.BreedName).Titled("Breed").Filterable(true).Sortable(true);
				columns.Add(model => model.ServiceTypeName).Titled("Service Type").Filterable(true).Sortable(true);
				columns.Add(model => model.Price).Titled("Price").Sortable(true);
				columns.Add().RenderedAs(o => Html.ActionLink("Edit", "EditServiceType", new {id = o.Id}));
				columns.Add().RenderedAs(o => Html.ActionLink("Delete Service Type and Price", "DeleteServiceTypes", new {id = o.Id}));
			}).Using(GridFilterMode.Excel).Pageable(page => { page.RowsPerPage = 14; }).Empty("No data found")
		</div>
	</div>
}
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script>
	document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
</script>